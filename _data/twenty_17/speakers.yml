- title: Kaggle-Titanic (Python)
  name: Titanic
  subtitle: Top 5% no desafio
  img: resultado-titanic.jpg
  thumbnail: titanic.jpg
  alt: Titanic
  topic: Machine Learning
  description: |
      <fieldset>
      <legend>
       Dados retirados do desastre do titanic, com informações coletadas sobre os passageiros e quais sobreviveram.
       <br>Após a análise dos dados para determinar as correlações, foi elaborado um modelo usando python para prever se um passageiro sobrevive ou não, baseado nos dados do banco de testes.
      </legend>
      </fieldset>
 
  

- title: BI Serverless (JScript)
  name: GoogleAPI
  subtitle: BI com APIs google
  img: /api/resultados.jpg
  thumbnail: /api/evolucao.jpg
  alt: Serverless
  topic: Business Intelligence
  description: |
      <fieldset>
      <legend>
       <h1> Data Science e automação de rotinas com google scripts </h1>
        <br><br>Esse projeto foi feito em partes:
        <br>1- Através das ordens de mercado dos traders que era exportado da plataforma de operações para um arquivo .csv, um script calculava o resultado mensal acumulado dos alunos, com atualização diária automática.
        <br>2- Várias atividades eram feitas pelos traders e registradas em planilhas no google drive, um outro script foi usado para ler as planilhas e calcular notas em cada categoria para os traders.
        <br>3- Foi possível relacionar a eficiência das atividades com o desempenho no mercado real e o insight foi apresentado aos traders.
        <br>4- Um último script era usado para ler todas as planilhas, gerar um relatório em PDF e enviar por email para os diretores semanalmente.        
      </legend>
      </fieldset>

- title: Kaggle-DataScienceBowl (R+SQL)
  name: DSBowl
  subtitle: Big Data Science
  img: 
  thumbnail: dsbowl.jpg
  alt: Picture of TBD
  topic: Data Science
  description: Em andamento

- title: Caixeiro viajante (Java)
  name: PCV
  subtitle: Inteligência Artificial
  img: 
  thumbnail: TSP.jpg
  alt: Problema de 225 cidades
  topic: Inteligência Artificial
  description: |
      <fieldset>
      <legend>   
        <br><br>Foi feito um estudo sobre diferentes técnicas para o problema do caixeiro viajante, o problema mais famoso que envolve complexidade de ordem fatorial.
        <br>Implementei 2 algoritmos genéticos, 1 rede neural e 1 algoritmo heurístico para comparar o desempenho no problema.
        <br>Os algoritmos genéticos envolviam um operador EER (Enhanced Edge Recombination) e um guloso (desenvolvido por mim), cada um com uma técnica de cruzamento diferente.
        <br>Para a rede neural, usei o mapa de Kohonen, uma rede auto organizável, de aprendizagem não supervisionada.
        <br>O algoritmo heurístico de Lin-Kernighan é o mais famoso para o problema, com tempos de execução inigualáveis. Foi usado para otimizar os algoritmos genéticos posteriormente. 
        <br>No teste, o algoritmo que desenvolvi (com população aleatória, cruzamento com operador guloso e otimização Lin-Kernighan) foi o que obteve os melhores resultados na comparação. 
        <br><br><a href="http://dx.doi.org/10.18674/exacta.v4i1.304" target="_blank">Artigo publicado na revista E-xacta, v.4, n.1</a>
      </legend>
      </fieldset>
